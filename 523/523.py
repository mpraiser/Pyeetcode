from typing import List
from functools import cache


class Solution:
    def checkSubarraySum(self, nums: List[int], k: int) -> bool:

        @cache
        def f(i, j):
            """
            sum of nums in [i, j]
            """
            if i == 0:
                if j == 0:
                    return nums[0]
                else:
                    return f(0, j-1) + nums[j]
            else:
                return f(0, j) - f(0, i-1)

        for i in range(len(nums)):
            for j in range(i+1, len(nums)):
                if f(i, j) % k == 0:
                    return True
        return False


x = Solution()
ans = x.checkSubarraySum([9,180,516,485,424,441,244,427,375,15,325,396,69,186,29,402,393,305,480,66,236,170,347,165,277,201,412,222,381,49,269,13,120,172,226,371,23,154,252,52,211,402,278,522,502,211,53,346,298,411,17,335,436,37,374,439,351,236,251,234,81,394,334,230,452,365,499,231,361,361,491,526,220,201,400,317,473,193,446,7,519,351,289,471,337,232,403,234,336,237,94,93,141,491,452,516,67,174,56,443,399,195,176,442,263,526,23,62,44,408,299,526,331,252,113,105,435,102,118,47,497,273,65,364,477,475,398,204,188,429,427,190,513,232,131,231,332,77,490,80,443,245,173,300,496,131,374,296,183,163,163,22,302,224,207,80,337,365,137,16,270,380,326,272,418,138,193,479,493,246,79,267,165,307,57,308,120,156,383,489,30,399,319,514,406,8,415,157,469,122,20,269,153,413,274,208,449,141,188,117,85,220,149,118,306,321,420,62,71,284,167,148,281,319,359,335,408,261,9,227,425,12,385,194,476,103,423,521,212,69,85,342,497,191,329,396,449,173,247,84,234,13,507,349,205,436,145,123,318,95,201,10,227,297,199,431,137,273,380,287,69,171,131,478,64,230,379,88,377,184,191,144,297,32,303,156,310,190,497,234,138,501,356,291,427,150,311,453,436,325,360,275,250,287,55,359,509,375,28,175,469,428,251,366,489,451,160,174,103,252,377,297,12,301,144,42,15,277,258,375,505,290,33,509,252,227,130,19,66,192,8,131,171,307,121,133,306,305,125,234,202,127,35,53,247,359,155,231,66,306,237,464,435,76,444,247,442,258,77,183,270,469,396,204,243,386,33,483,192,463,458,404,340,249,470,396,110,343,174,301,48,165,414,245,346,262,66,269,286,62,382,23,216,144,276,332,463,87,340,6,197,410,443,205,153,438,53,23,25,175,354,519,427,395,449,464,453,338,20,470,506,317,88,457,59,51,346,270,342,62,222,195,325,497,58,298,114,185,465,115,326,398,252,144,151,249,260,244,263,293,471,146,361,460,121,409,378,212,303,336,268,407,272,64,79,179,22,41,27,36,459,285,6,235,297,186,466,394,30,307,414,398,68,101,496,393,123,276,274,277,42,378,109,515,299,264,294,308,508,319,391,192,382,214,485,238,461,461,390,184,348,322,187,439,262,488,482,53,48,519,202,521,5,33,216,281,516,307,416,280,183,414,171,237,454,233,505,326,94,392,363,321,416,86,134,318,292,454,237,32,269,297,311,67,93,476,3,99,434,163,392,455,266,90,259,226,127,221,356,268,168,331,142,263,491,234,126,522,77,176,70,25,35,506,481,425,234,177,64,167,119,77,68,351,341,250,128,524,208,380,165,495,204,37,2,58,418,148,30,401,22,294,342,332,259,351,461,75,507,94,183,76,167,405,394,355,153,253,225,97,255,312,392,362,75,149,341,312,132,329,407,115,485,1,386,107,232,294,457,362,268,7,226,201,501,333,393,310,174,505,282,113,17,451,502,474,327,278,237,273,420,187,370,377,523,510,24,428,144,33,441,64,471,241,198,321,189,151,297,379,259,314,280,481,150,358,304,332,197,86,154,64,311,295,407,491,435,15,403,434,321,516,283,193,106,449,401,311,188,54,365,216,259,92,326,456,500,433,417,36,212,345,149,234,142,169,464,181,17,345,99,274,145,292,16,163,369,360,62,377,194,357,343,52,198,193,357,334,48,192,249,14,226,247,445,290,390,358,241,403,261,51,433,293,272,426,380,210,46,453,355,304,237,253,155,404,195,59,184,205,334,94,448,223,326,201,18,94,12,123,518,336,64,506,363,450,66,150,502,14,348,446,312,207,71,508,158,477,466,250,222,132,215,76,153,88,359,278,237,270,220,401,32,470,430,220,23,313,417,241,434,6,393,383,99,152,320,139,287,372,146,441,187,512,428,412,303,133,240,237,63,93,419,491,469,158,377,513,13,317,426,222,292,30,505,107,210,302,363,278,358,445,403,524,70,408,176,158,197,286,281,37,357,113,270,56,408,260,172,297,136,47,525,112,55,452,262,289,108,502,127,172,19,326,458,434,502,468,524,461,331,436,315,439,202,68,173,287,511,382,458,451,469,28,257,84,111,243,315,190,167,405,369,354,269,394,413,230,313,330,336,303,382,509,287,231,337,6,502,306,313,143,102,417,191,482,521,434,40,119,520,149,307,48,408,16,387,355,249,359,82,12,299,304,512,427,523,118,321,109,351,352,170,278,8,478,500,61,315,120], 1277220540)
print(ans)